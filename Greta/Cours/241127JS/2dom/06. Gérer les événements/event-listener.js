/**
 * --------------------------------------------
 * 1 - Au click sur le bouton "Cacher" : 
 * 
 * â†’ Cacher le paragraphe
 * â†’ Changer le texte du bouton "Cacher" en "Afficher"
 * 
 * Si le bouton est cliquÃ© de nouveau : 
 * 
 * â†’ Le paragraphe s'affiche de nouveau
 * â†’ Changer le texte du bouton "Afficher" en "Cacher"
 * --------------------------------------------
 */


/**
 * --------------------------------------------
 * 2 - CrÃ©ation d'une calculatrice simple : 
 * 
 * â†’ CrÃ©er 3 champs inputs :
 *   - Le premier et le troisiÃ¨me sont de type number et permettent de saisir un nombre (1 et 2 par exemple)
 *   - Le second est de type texte et permet de saisir un opÃ©rateur (+, -, *, /)
 * 
 * â†’ CrÃ©er un bouton qui dÃ©clenche le calcul des 2 inputs par l'opÃ©rateur
 * 
 * â†’  Afficher le rÃ©sultat dans le HTML. Tant qu'il n'y a pas de rÃ©sultat, afficher un petit texte en attente.
 * --------------------------------------------
 */




/**
 * --------------------------------------------
 * 3 - CrÃ©er un container avec 3 div (sans passer par JS, en HTML/CSS classique). Chaque div propose un produit Ã  acheter avec une image, un titre, un petit paragraphe et un bouton "Acheter ğŸ¤“"
 * 
 * â†’ Attacher un Ã©couteur d'Ã©vÃ©nÃ©ment de type "click" sur chaque bouton "Acheter ğŸ¤“". 
 * â†’ Si une div est cliquÃ©e, le produit est posusÃ© dans une propriÃ©tÃ©e "selectedProducts". 
 * â†’ Cette propriÃ©tÃ© est affichÃ©e dans le DOM, et pour chaque nouveau produit sÃ©lectionnÃ©, le DOM est mis Ã  jour. 
 * 
 * Le pÃ´le Marketing vous demande d'ajouter un bout de code afin de relever l'intÃ©rÃªt des utilisateurs vis-Ã -vis des produits proposÃ©s sur la e-boutique
 * De votre cÃ´tÃ©, vous imaginez le procÃ©dÃ© suivant : "j'Ã©coute le nombre de fois oÃ¹ l'utilisateur passe sa souris sur la div de l'un des produits"
 * 
 * â†’ Attacher un Ã©couteur d'Ã©vÃ©nÃ©ment de type "mouseover" sur chaque div. 
 * â†’ Compter le nombre de fois oÃ¹ la souris de l'utilisateur passe sur chaque div. DÃ¨s lors que la souris survole une div, mettre Ã  jour le "nombre de fois oÃ¹ la div X a Ã©tÃ© survolÃ©e" dans l'objet utilisateur
 * --------------------------------------------
 */


/**
 * --------------------------------
 * 4 - Compter le nombre de fois oÃ¹ chaque "card" est survolÃ©e par la souris de l'utilisateur
 * â†’ CrÃ©er 5 compteurs HTML : un pour chaque card + un compteur global.
 * â†’ DÃ¨s qu'une "card" est survolÃ©e, l'utilisateur doit voir le compteur liÃ© Ã  l'Ã©lÃ©ment, ainsi que le compteur global, Ãªtre incrÃ©mentÃ©s. 
 * 
 * 
 * Exemple :
 *
 * Au dÃ©but, tous les compteurs sont Ã  0.
 * 
 * Si mon utilisateur survole une premiÃ¨re fois la "card" nÂ°1, il doit voir Ã©crit : 
 * â†’ card nÂ°1 : 1 fois survolÃ©e
 * â†’ card nÂ°2 : 0 fois survolÃ©e
 * â†’ card nÂ°3 : 0 fois survolÃ©e
 * â†’ card nÂ°4 : 0 fois survolÃ©e
 * â†’ Total : 1 survol
 * 
 *  * Si mon utilisateur survole ensuite une premiÃ¨re fois la "card" nÂ°2, il doit voir Ã©crit : 
 * â†’ card nÂ°1 : 1 fois survolÃ©e
 * â†’ card nÂ°2 : 1 fois survolÃ©e
 * â†’ card nÂ°3 : 0 fois survolÃ©e
 * â†’ card nÂ°4 : 0 fois survolÃ©e
 * â†’ Total : 2 survols
 * 
 * Etc...
 * 
 * 
 * â†’ Si toutes les "card" ont Ã©tÃ© survolÃ©es, un texte doit apparaÃ®tre "Bien jouÃ© cher utilisateur"
 * â†’ Si les "card" ont Ã©tÃ© survolÃ©es plus de 100 fois, il doit voir apparaÃ®tre l'image d'un charmant phacochÃ¨re. 
 * 
 * 
 * Lors d'un survol de souris, ajouter Ã  la "card" survolÃ©e une classe. Lorsque la "card" n'est plsu survolÃ©e, retirer cette classe.
 * Renseigner le CSS de cette classe directement depuis le fichier CSS. 
 * --------------------------------
 */
